///////////////////////////////////////////////////////////
//  IXmlNode.cs
//  Implementation of the Class IXmlNode
//  Generated by Enterprise Architect
//  Created on:      15-mar-2016 08:28:13
//  Original author: Filipe
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using ParserXMI;


namespace Core {
	public abstract class IXmlNode {

        //XML atributtes
        public string Tag { get; set; }
        public string Type { get; set; }
        public string Name { get; set; }
        public string Id { get; set; }
        public string Visibility { get; set; }
        public string IdPackage { get; set; }
        public string Geometry { get; set; }
        public string Subject { get; set; }
        public string Seqno { get; set; }
        public string Style { get; set; }
        public string IsAbstract { get; set; }
        public string Start { get; set; }
        public string End { get; set; }
        public string IdSource { get; set; }
        public string IdTarget { get; set; }
        public string EA_Type { get; set; } //aggregation, association etc
        public string Aggregation { get; set; } //none, composite, shared etc

        public List<IXmlNode> ChildNodes { get; set; }

		public IXmlNode(){
            ChildNodes = new List<IXmlNode>();
		}

        public virtual void Add(IXmlNode node)
        {
            ChildNodes.Add(node);
        }

        public IXmlNode FindById(List<IXmlNode> list ,  string id)
        {
            IXmlNode r = new Package();
            foreach(IXmlNode l in list)
            {
                if(l.Id.Equals(id))
                {
                    r = l;
                }
            }
            return r;
        }

		~IXmlNode(){

		}

	}//end IXmlNode

}//end namespace Core